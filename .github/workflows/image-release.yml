name: Docker Image Release

on:
  #push:
  #  tags:
  #    - "v*"

  workflow_dispatch:

env:
  #IMAGE_NAME: ${{ github.event.repository.name }}
  IMAGE_NAME: carlesbarreda/certbot

jobs:
  build:
    name: Build and push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        id: qemu
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Available platforms
        run: echo ${{ steps.qemu.outputs.platforms }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true

      - name: Builder instance name
        run: echo ${{ steps.buildx.outputs.name }}

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          logout: true

      - name: Image tag
        run: |
          TAGS=$(curl -s https://hub.docker.com/v2/repositories/certbot/certbot/tags | jq '.results[] | {(.name): .images[].digest}')
          DIGEST=$(echo $TAGS | jq . | awk -F': ' '/"latest"/ { print $2 }')
          TAGNAME=$(echo $TAGS | jq . | grep $DIGEST | egrep -v 'latest|amd64' | cut -d'"' -f2)
          echo "TAGNAME=$TAGNAME" >> $GITHUB_ENV

      - name: Build amd64
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.buildx
          platforms: linux/amd64
          build-args: |
            ARCH=amd64
          tags: |
            ${{ env.IMAGE_NAME }}:amd64-${{ env.TAGNAME }}
            ${{ env.IMAGE_NAME }}:amd64-latest
          push: true

      - name: Build arm64v8
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.buildx
          platforms: linux/arm64
          build-args: |
            ARCH=arm64v8
          tags: |
            ${{ env.IMAGE_NAME }}:arm64v8-${{ env.TAGNAME }}
            ${{ env.IMAGE_NAME }}:arm64v8-latest
          push: true

      - name: Build arm32v6
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.buildx
          platforms: linux/arm/v6
          build-args: |
            ARCH=arm32v6
          tags: |
            ${{ env.IMAGE_NAME }}:arm32v6-${{ env.TAGNAME }}
            ${{ env.IMAGE_NAME }}:arm32v6-latest
          push: true

#TAGS=$(curl -s https://hub.docker.com/v2/repositories/certbot/certbot/tags | jq '.results[] | {(.name): .images[].digest}')
#DIGEST=$(echo $TAGS | jq . | awk -F': ' '/"latest"/ { print $2 }')
#TAG_VERSION=$(echo $TAGS | jq . | grep $DIGEST | egrep -v 'latest|amd64' | cut -d'"' -f2)
#echo $TAG_VERSION
