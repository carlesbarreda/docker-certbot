name: Docker Image release

on:
  #push:
  #  tags:
  #    - "v*"

  workflow_dispatch:

env:
  IMAGE_NAME: ${{ github.event.repository.name }}

jobs:
  build:
    name: Build and push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        id: qemu
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Available platforms
        run: echo ${{ steps.qemu.outputs.platforms }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true

      - name: Builder instance name
        run: echo ${{ steps.buildx.outputs.name }}

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          logout: true

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./Dockerfile
          tags: |
            carlesbarreda/${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.VERSION }}

#TAGS=$(curl -s https://hub.docker.com/v2/repositories/certbot/certbot/tags | jq '.results[] | {(.name): .images[].digest}')
#DIGEST=$(echo $TAGS | jq . | awk -F': ' '/"latest"/ { print $2 }')
#TAG_VERSION=$(echo $TAGS | jq . | grep $DIGEST | egrep -v 'latest|amd64' | cut -d'"' -f2)
#echo $TAG_VERSION
